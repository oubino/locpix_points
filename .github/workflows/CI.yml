name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: locpix-points
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
      - name: Set up first environment
        shell: bash -l {0}
        run: |
          pip install torch --index-url https://download.pytorch.org/whl/cu126
          pip install -e .
          git clone https://github.com/oubino/pytorch_geometric.git
          cd pytorch_geometric
          pip install -e .
          git checkout hetero_transforms
          cd ..
          pip install open3d 
          pip install torch-summary torchmetrics pytest
          pip install torch-scatter torch-sparse torch-cluster -f https://data.pyg.org/whl/torch-2.6.0+cu126.html --no-cache-dir
          git clone https://github.com/oubino/DIG
          cd DIG
          pip install .
          cd ..
      - name: Demo the workflow (initialise, preprocess, featextract, generate splits, k-fold for 1 epoch)
        shell: bash -l {0}
        run: |
          cd demo
          initialise -u oliver-umney -pn output -pp . -d data -dn demo -cp no -cs no -gt yes
          cp -rf config output/
          cd output
          python scripts/preprocess.py
          python scripts/featextract.py
          python scripts/generate_k_fold_splits.py
          sed -i 's/^epochs: [0-9]\+/epochs: 1/' config/train.yaml
          export WANDB_API_KEY=${{ secrets.wandb_token }}
          wandb login
          python scripts/k_fold.py

      # continue from here

      #- name: Test with tox
      #  run: tox
      #- name: Add .env file to allow subsequent steps
      #  run: |
      #    touch .env
      #    echo 'RAW_DATA_PATH = tests/test_data' >> .env
      #- name: Install requirements
      #  run: |
      #    make requirements
      #- name: Install tox dependencies
      #  run: |
      #    python -m pip install tox-gh-actions
      #- name: Test with tox
      #  run: tox
      #- name: Lint with flake8
      #  run: |
      #    # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
