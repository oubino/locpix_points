name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          "${SHELL}" <(curl -L micro.mamba.pm/install.sh)
      - name: Set up first environment
        run: |
          micromamba create -n rapids=23.10 -c rapidsai -c conda-forge -c nvidia cudf=23.10 cuml=23.10 python=3.10 cuda-version=12.0
      - name: Set up second environment
        run: |
          micromamba create -n locpix-points -c conda-forge python=3.11
          eval "$(micromamba shell hook --shell bash)"
          micromamba shell init --shell bash --root-prefix=~/micromamba
          micromamba activate locpix-points
          pip install -e .
          pip install -r requirements.txt
          git clone https://github.com/mims-harvard/GraphXAI.git
          cd GraphXAI
          pip install -e .
          cd ..
          ls
      #    python -m pip install tox tox-gh-actions
      - name: Test
        run: |
          bash tests/tests.sh
      #- name: Test with tox
      #  run: tox
      #- name: Add .env file to allow subsequent steps
      #  run: |
      #    touch .env
      #    echo 'RAW_DATA_PATH = tests/test_data' >> .env
      #- name: Install requirements
      #  run: |
      #    make requirements
      #- name: Install tox dependencies
      #  run: |
      #    python -m pip install tox-gh-actions
      #- name: Test with tox
      #  run: tox
      #- name: Lint with flake8
      #  run: |
      #    # stop the build if there are Python syntax errors or undefined names
      #    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
