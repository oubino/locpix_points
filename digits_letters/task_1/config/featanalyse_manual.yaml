# map from real terms to the integer labels
label_map:
  one: 0
  two: 1
  three: 2
  T: 3
  O: 4
  L: 5
  grid: 6

# Features to analyse (below are entire list that can be selected)
features:
  - count
  - RGyration
  - linearity
  - planarity
  - length_pca
  - area_pca
  - density_pca
  - perimeter
  #- area_convex_hull
  #- length_convex_hull
  #- density_convex_hull

# plot pca length/area vs convex hull to compare
pca_vs_convex_hull: False
# plot features to screen (features will be saved regardless)
boxplots: False
# run umap on the features
umap:
  # if implement True will run UMAP
  implement: False
  # number of neighbors
  n_neighbors: 20
  # min distance
  min_dist: 0.5
# run kmeans on the features
kmeans: True
# run pca on the data
pca:
  # if implement True will run PCA
  implement: False
  # number of compoments to retain during PCA
  n_components: 2

# if specified then logistic regression applied to features
log_reg:
  # penalties to evaluate
  logistic__penalty: ["l2"]
  # inverse of regularisation strength
  logistic__C: [0.1, 0.5, 1]

# if specified then decision tree applied to features
dec_tree:
  # depth of tree
  tree__max_depth: [40, 45, 50]
  # number features to consider
  tree__max_features: [4, 5, 6]

# if specified then svm applied to features
#svm:
#  # regularisation parameter
#  svm__C: [1]
#  #'kernel used
#  svm__kernel: ["rbf"]
#  # kernel coefficient
#  svm__gamma: ["scale"]

# if specified then knn applied to features
knn:
  # number of neighbours
  knn__n_neighbors: [3,5,7,9,11]
  # weight function used during prediction
  knn__weights: ["distance"]
